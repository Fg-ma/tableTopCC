- name: Kill mongod process (ignoring failure if not running)
  command: |
    pkill -F "{{ mongo_base_dir }}/shard/logs/mongod.pid"
  ignore_errors: true
  become: true

- name: Fix ownership of all MongoDB files
  become: true
  ignore_errors: true
  file:
    path: "{{ mongo_base_dir }}/shard"
    recurse: yes
    owner: "{{ mongo_vault_agent_user }}"
    group: "{{ mongo_vault_agent_group }}"

- name: Disable transparent hugepage defragmentation
  become: true
  shell: |
    echo 'defer+madvise' > /sys/kernel/mm/transparent_hugepage/defrag

- name: Disable transparent hugepage paging
  become: true
  shell: |
    echo '0' > /sys/kernel/mm/transparent_hugepage/khugepaged/max_ptes_none

- name: Tune vm.swappiness to 1 (avoid swapping)
  become: true
  sysctl:
    name: vm.swappiness
    value: 1
    sysctl_set: yes
    state: present
    reload: yes

- name: Render mongod shard “auth” config file
  template:
    src: mongod.conf.j2
    dest: "{{ mongo_base_dir }}/shard/conf/mongod.conf"
    owner: "{{ mongo_vault_agent_user }}"
    group: "{{ mongo_vault_agent_group }}"
    mode: "0440"

- name: Create systemd service file for MongoDB shard server
  copy:
    dest: /etc/systemd/system/mongod-shardsvr.service
    content: |
      [Unit]
      Description=MongoDB Shard Server
      After=network.target mongo-shard-vault-agent.service
      Requires=mongo-shard-vault-agent.service

      [Service]
      Type=simple
      User={{ mongo_vault_agent_user }}
      Group={{ mongo_vault_agent_group }}
      WorkingDirectory={{ mongo_base_dir }}
      LimitNOFILE=64000
      Environment=GLIBC_TUNABLES=glibc.pthread.rseq=0
      ExecStart={{ mongo_base_dir }}/bin/mongod \
        --config "{{ mongo_base_dir }}/shard/conf/mongod.conf"
      Restart=always
      RestartSec=5

      [Install]
      WantedBy=multi-user.target
  notify:
    - Reload systemd

- name: Force systemd reexec and daemon reload
  shell: |
    systemctl daemon-reexec
    systemctl daemon-reload

- name: Check if mongod-shardsvr.service unit exists
  stat:
    path: /etc/systemd/system/mongod-shardsvr.service
  register: mongod_unit

- name: Reset failed mongod-shardsvr if loaded
  command: systemctl reset-failed mongod-shardsvr.service
  when: mongod_unit.stat.exists
  ignore_errors: true

- name: Enable and start MongoDB shard server service
  systemd:
    name: mongod-shardsvr.service
    enabled: yes
    state: started

- name: Remove the temporary no-auth config
  file:
    path: "{{ mongo_base_dir }}/shard/conf/mongod-no-auth.conf"
    state: absent

- name: Fix ownership of all MongoDB files
  become: true
  file:
    path: "{{ mongo_base_dir }}/shard"
    recurse: yes
    owner: "{{ mongo_vault_agent_user }}"
    group: "{{ mongo_vault_agent_group }}"
  notify:
    - Reload systemd

- name: Wait for mongod to be up
  wait_for:
    host: "10.{{ mongo_shard_subnet }}.0.{{ ansible_host.split('.')[-1] }}"
    port: "{{ shard_port }}"
    delay: 5
    state: started
    timeout: 60
  ignore_errors: true

- name: Fix ownership of all MongoDB files
  become: true
  file:
    path: "{{ mongo_base_dir }}/shard"
    recurse: yes
    owner: "{{ mongo_vault_agent_user }}"
    group: "{{ mongo_vault_agent_group }}"
  notify:
    - Reload systemd

- name: Wait for mongod to be up
  wait_for:
    host: "10.{{ mongo_shard_subnet }}.0.{{ ansible_host.split('.')[-1] }}"
    port: "{{ shard_port }}"
    delay: 5
    state: started
    timeout: 60
  ignore_errors: true

- name: Fix ownership of all MongoDB files
  become: true
  file:
    path: "{{ mongo_base_dir }}/shard"
    recurse: yes
    owner: "{{ mongo_vault_agent_user }}"
    group: "{{ mongo_vault_agent_group }}"
  notify:
    - Reload systemd
